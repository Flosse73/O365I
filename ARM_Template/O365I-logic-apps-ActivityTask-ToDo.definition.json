{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_O365I_logic_app_ActivityTask_to_ToDo_name": {
            "defaultValue": "O365I-logic-app-ActivityTask-to-ToDo",
            "type": "string"
        },
        "office365_1_Connection_DisplayName": {
            "type": "string",
            "metadata": {
                "description": "The display name for the Office 365 To Do connection"
            }
        },
        "workflows_O365I-logic-app-ActivityTask-to-ToDo_parameters_$connections": {
            "defaultValue": {
                "todo": {
                    "connectionId": "/subscriptions/2ba46627-93c3-483a-9f65-a5417070c679/resourceGroups/O365I-Test-default/providers/Microsoft.Web/connections/todo-1",
                    "connectionName": "todo-1",
                    "id": "/subscriptions/2ba46627-93c3-483a-9f65-a5417070c679/providers/Microsoft.Web/locations/westeurope/managedApis/todo"
                }
            },
            "type": "Object"
        }
    },
    "resources": [
        //-------------------------------------------------------------------------------------------------------------------------------
        // Azure Logic App
        // ActivityTask -> To Do
        {
            "apiVersion": "2017-07-01",
            "dependsOn": [],
            "location": "westeurope",
            "name": "[parameters('workflows_O365I_logic_app_ActivityTask_to_ToDo_name')]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                                "todo": {
                                    "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_DisplayName'))]",
                                    "connectionName": "[parameters('office365_1_Connection_DisplayName')]",
                                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'westeurope', '/managedApis/', 'todo')]"
                                }
                            },
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('Parse_JSON')?['d']?['results']",
                            "actions": {
                                "For_each_2": {
                                    "foreach": "@items('For_each')?['AddressSnapshotDisplayName']",
                                    "actions": {
                                        "Condition_compare_Name": {
                                            "actions": {
                                                "Add_a_to-do_(V2)": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Body": {
                                                                "Content": "<p>Generated by Azure Logic Apps! @{items('For_each')?['ActivityTaskScheduledPeriod']?['ParentObjectID']}</p>",
                                                                "ContentType": "HTML"
                                                            },
                                                            "DueDateTime": {
                                                                "DateTime": "@items('For_each')?['ActivityTaskScheduledPeriod']?['DateTime']",
                                                                "TimeZone": "UTC"
                                                            },
                                                            "ReminderDateTime": {
                                                                "TimeZone": "UTC"
                                                            },
                                                            "StartDateTime": {
                                                                "TimeZone": "UTC"
                                                            },
                                                            "Subject": "@items('For_each')?['Name']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['todo']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/tasks"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@items('For_each_2')?['FormattedName']",
                                                            "Florian La√ünig"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "Initialize_String_CurrentDateTimeMinusCycleTime": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Authorization": "Basic XXXXXXXXXXXXXXXXXXXXXXXXXXX"
                                },
                                "method": "GET",
                                "queries": {
                                    "$expand": "AddressSnapshotDisplayName,ActivityTaskScheduledPeriod",
                                    "$filter": "CreationDateTime gt datetimeoffset'@{variables('StringCurrentDateTimeMinusCycleTime')}'",
                                    "$format": "json",
                                    "$orderby": "CreationDateTime desc"
                                },
                                "uri": "https://my320276.sapbydesign.com/sap/byd/odata/cust/v1/tasks/ActivityTaskCollection"
                            }
                        },
                        "Initialize_String_CurrentDateTimeMinusCycleTime": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StringCurrentDateTimeMinusCycleTime",
                                        "type": "string",
                                        "value": "@{concat(substring(addHours(utcNow(), -1), 0, 19), 'Z')}"
                                    }
                                ]
                            },
                            "description": "This string contains the current time - the time of the polling cycle (it is 1 hour of, so this variable contains the time from 2 hours ago)"
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP')",
                                "schema": {
                                    "properties": {
                                        "d": {
                                            "properties": {
                                                "results": {
                                                    "items": {
                                                        "properties": {
                                                            "ActivityTaskActivityParty": {
                                                                "properties": {
                                                                    "__deferred": {
                                                                        "properties": {
                                                                            "uri": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "ActivityTaskScheduledPeriod": {
                                                                "properties": {
                                                                    "ActivityTask": {
                                                                        "properties": {
                                                                            "__deferred": {
                                                                                "properties": {
                                                                                    "uri": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "DateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "ObjectID": {
                                                                        "type": "string"
                                                                    },
                                                                    "ParentObjectID": {
                                                                        "type": "string"
                                                                    },
                                                                    "__metadata": {
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "uri": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "AddressSnapshotDisplayName": {
                                                                "items": {
                                                                    "properties": {
                                                                        "FormattedName": {
                                                                            "type": "string"
                                                                        },
                                                                        "ObjectID": {
                                                                            "type": "string"
                                                                        },
                                                                        "__metadata": {
                                                                            "properties": {
                                                                                "type": {
                                                                                    "type": "string"
                                                                                },
                                                                                "uri": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "__metadata",
                                                                        "ObjectID",
                                                                        "FormattedName"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "CreationDateTime": {
                                                                "type": "string"
                                                            },
                                                            "GroupCode": {
                                                                "type": "string"
                                                            },
                                                            "GroupCodeText": {
                                                                "type": "string"
                                                            },
                                                            "ID": {
                                                                "type": "string"
                                                            },
                                                            "LastChangeDateTime": {
                                                                "type": "string"
                                                            },
                                                            "LifeCycleStatusCode": {
                                                                "type": "string"
                                                            },
                                                            "LifeCycleStatusCodeText": {
                                                                "type": "string"
                                                            },
                                                            "Name": {
                                                                "type": "string"
                                                            },
                                                            "NormalisedURI": {
                                                                "type": "string"
                                                            },
                                                            "ObjectID": {
                                                                "type": "string"
                                                            },
                                                            "PartyID": {
                                                                "type": "string"
                                                            },
                                                            "PriorityCode": {
                                                                "type": "string"
                                                            },
                                                            "PriorityCodeText": {
                                                                "type": "string"
                                                            },
                                                            "RoleCode": {
                                                                "type": "string"
                                                            },
                                                            "RoleCodeText": {
                                                                "type": "string"
                                                            },
                                                            "TypeCode": {
                                                                "type": "string"
                                                            },
                                                            "TypeCodeText": {
                                                                "type": "string"
                                                            },
                                                            "__metadata": {
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string"
                                                                    },
                                                                    "uri": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "__metadata",
                                                            "ObjectID",
                                                            "ID",
                                                            "GroupCode",
                                                            "GroupCodeText",
                                                            "TypeCode",
                                                            "TypeCodeText",
                                                            "Name",
                                                            "LifeCycleStatusCode",
                                                            "LifeCycleStatusCodeText",
                                                            "CreationDateTime",
                                                            "LastChangeDateTime",
                                                            "PriorityCode",
                                                            "PriorityCodeText",
                                                            "RoleCode",
                                                            "RoleCodeText",
                                                            "PartyID",
                                                            "NormalisedURI",
                                                            "ActivityTaskActivityParty",
                                                            "AddressSnapshotDisplayName",
                                                            "ActivityTaskScheduledPeriod"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": "[parameters('workflows_O365I-logic-app-ActivityTask-to-ToDo_parameters_$connections')]"
                    }
                },
                "state": "Enabled"
            },
            "scale": null,
            "tags": {},
            "type": "Microsoft.Logic/workflows"
        },
        //-------------------------------------------------------------------------------------------------------------------------------
        // Azure Logic App
        // To Do -> ActivityTask 
        {
            "apiVersion": "2017-07-01",
            "dependsOn": [],
            "location": "westeurope",
            "name": "O365I-logic-app-ToDo-to-ActivityTask",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                                "todo": {
                                    "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_DisplayName'))]",
                                    "connectionName": "[parameters('office365_1_Connection_DisplayName')]",
                                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'westeurope', '/managedApis/', 'todo')]"
                                }
                            },
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_to-do_is_updated": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 15
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['todo']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/trigger/onUpdateToDo"
                            }
                        }
                    },
                    "actions": {
                        "Call_Azure_function_if_the_ToDo's_status_is_set_to_'completed'": {
                            "actions": {
                                "HTTP_POST_Request_to_the_Azure_Function_'O365I-function-post-request'": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "BasicAuth": "@variables('StringBasicAuth')",
                                            "GetURI": "@variables('StringGetURI')",
                                            "ObjectID": "@variables('StringTodoObjectID')",
                                            "PostURI": "@variables('StringPostURI')"
                                        },
                                        "method": "POST",
                                        "uri": "https://o365i-function-app.azurewebsites.net/api/O365I-function-post-request?code=MTN2ZZh9HaV1D83SarCEsynn6oGSgYcBjrzYXNuz3f9jhY0pOql6Tw=="
                                    },
                                    "description": "This is done via the Http connector rather than via the Azure functions connector, because this makes the deployment much easier, due to needing only the logic app in the ARM template."
                                }
                            },
                            "runAfter": {
                                "Initialize_String_PostURI": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['status']",
                                            "completed"
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@variables('StringCheckIfCreatedByLogicApp')",
                                            "Generated by Azure Logic Apps!"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_String_BaiscAuth": {
                            "runAfter": {
                                "Initialize_String_ToDoObjectID_from_parsed_Json": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StringBasicAuth",
                                        "type": "string",
                                        "value": "Basic XXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                                    }
                                ]
                            }
                        },
                        "Initialize_String_CheckIfCreatedByLogicApp": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StringCheckIfCreatedByLogicApp",
                                        "type": "string",
                                        "value": "@{substring(body('Parse_JSON')?['content'], 151, 30)}"
                                    }
                                ]
                            }
                        },
                        "Initialize_String_GetURI": {
                            "runAfter": {
                                "Initialize_String_BaiscAuth": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StringGetURI",
                                        "type": "string",
                                        "value": "https://my320276.sapbydesign.com/sap/byd/odata/cust/v1/tasks/ActivityTaskCollection"
                                    }
                                ]
                            }
                        },
                        "Initialize_String_PostURI": {
                            "runAfter": {
                                "Initialize_String_GetURI": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StringPostURI",
                                        "type": "string",
                                        "value": "https://my320276.sapbydesign.com/sap/byd/odata/cust/v1/tasks/ActivityTaskComplete"
                                    }
                                ]
                            }
                        },
                        "Initialize_String_ToDoObjectID_from_parsed_Json": {
                            "runAfter": {
                                "Initialize_String_CheckIfCreatedByLogicApp": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "StringTodoObjectID",
                                        "type": "string",
                                        "value": "@{substring(body('Parse_JSON')?['content'], 182, 32)}"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['body']",
                                "schema": {
                                    "properties": {
                                        "content": {
                                            "type": "string"
                                        },
                                        "contentType": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": "[parameters('workflows_O365I-logic-app-ActivityTask-to-ToDo_parameters_$connections')]"
                    }
                },
                "state": "Enabled"
            },
            "scale": null,
            "tags": {},
            "type": "Microsoft.Logic/workflows"
        }
    ],
    "variables": {}
}
